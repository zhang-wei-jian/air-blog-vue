declare const _default: import('vue').DefineComponent<
  Readonly<{
    type?: any
    id?: any
    dimensions?: any
    strokeWidth?: any
    position?: any
    shapeRendering?: any
    strokeColor?: any
    borderRadius?: any
    color?: any
    selected?: any
    dragging?: any
  }>,
  () =>
    | import('vue').VNode<
        import('vue').RendererNode,
        import('vue').RendererElement,
        {
          [key: string]: any
        }
      >
    | import('vue').VNode<
        import('vue').RendererNode,
        import('vue').RendererElement,
        {
          [key: string]: any
        }
      >[],
  unknown,
  {},
  {},
  import('vue').ComponentOptionsMixin,
  import('vue').ComponentOptionsMixin,
  ('click' | 'dblclick' | 'mouseenter' | 'mousemove' | 'mouseleave')[],
  'click' | 'dblclick' | 'mouseenter' | 'mousemove' | 'mouseleave',
  import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps,
  Readonly<
    import('vue').ExtractPropTypes<
      Readonly<{
        type?: any
        id?: any
        dimensions?: any
        strokeWidth?: any
        position?: any
        shapeRendering?: any
        strokeColor?: any
        borderRadius?: any
        color?: any
        selected?: any
        dragging?: any
      }>
    >
  > & {
    onClick?: ((...args: any[]) => any) | undefined
    onDblclick?: ((...args: any[]) => any) | undefined
    onMouseenter?: ((...args: any[]) => any) | undefined
    onMouseleave?: ((...args: any[]) => any) | undefined
    onMousemove?: ((...args: any[]) => any) | undefined
  },
  {
    readonly type?: any
    readonly id?: any
    readonly dimensions?: any
    readonly strokeWidth?: any
    readonly position?: any
    readonly shapeRendering?: any
    readonly strokeColor?: any
    readonly borderRadius?: any
    readonly color?: any
    readonly selected?: any
    readonly dragging?: any
  }
>
export default _default
